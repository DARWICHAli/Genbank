package Parser;

import java.io.BufferedReader;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import Utils.*;

public class CDSDownloader {
	private static final String REQUEST = "db=nuccore&retmode=raw&withparts=on&basic_feat=on";
	private final String ID;
	
	public CDSDownloader(String _id) {
        ID = _id;
        
    }
	
	public void download() throws HTTPException, IOException, OutOfMemoryException {
        Logs.info(String.format("Requesting sequence file [%s]", m_ID), true);
        final BufferedReader reader;
        URL url = null;
        try {
            url = getURL();
            reader = get(url);
            for (int c; (c = reader.read()) != -1; ) {
                m_DATA.append((char) c);
            }
        } catch (HTTPException | IOException e) {
            Logs.warning("Unable to get data : " + m_ID + " : " + url);
            Logs.exception(e);
            throw e;
        } catch (OutOfMemoryError e) {
            Logs.warning("Out of memory : " + m_ID + " : " + url);
            Logs.exception(new Exception(e));
            throw new OutOfMemoryException(e.getMessage());
        }
        Logs.info(String.format("Sequence [%s] : Request ended successfully (%d Bytes)", m_ID, m_DATA.length()), true);
    }
	
	private URL getURL() throws MalformedURLException {
        final String urlStr = String.format("%s?%s&id=%s", Utils.getCDSBaseUrl(), REQUEST, ID);

        final URL res;
        try {
            res = new URL(urlStr);
        } catch (MalformedURLException e) {
            // Log.warning("Unable to create an url : " + urlStr);
            // Log.exception(e);
            throw e;
        }

        return res;
    }
}
