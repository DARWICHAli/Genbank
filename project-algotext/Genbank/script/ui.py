from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileSystemModel
from PyQt5.QtGui import QPixmap
import os

class Ui_MainWindow(object):
        def setupUi(self, MainWindow):

                MainWindow.setObjectName("MainWindow")
                self.centralwidget = QtWidgets.QWidget(MainWindow)

                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                #sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
                self.centralwidget.setSizePolicy(sizePolicy)
                self.centralwidget.setObjectName("centralwidget")

                icon = QtGui.QIcon()
                icon.addPixmap(QtGui.QPixmap("../images/genome.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                MainWindow.setWindowIcon(icon)

                # container
                self.container = QtWidgets.QHBoxLayout(self.centralwidget)
                self.container.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.container.setContentsMargins(40, 10, 40, 40)
                self.container.setSpacing(40)
                self.container.setObjectName("container")

                # left container (partie arborescence)
                self.left_container = QtWidgets.QVBoxLayout()
                self.left_container.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.left_container.setContentsMargins(-1, 0, -1, -1)
                self.left_container.setSpacing(8)
                self.left_container.setObjectName("left_container")

                # layout tree labels
                self.horizontalLayoutWidget_2 = QtWidgets.QWidget()
                self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
                self.left_container.addChildWidget(self.horizontalLayoutWidget_2)

                # label "arborescence"
                self.labelArborescence = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
                self.labelArborescence.setEnabled(True)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.labelArborescence.sizePolicy().hasHeightForWidth())
                self.labelArborescence.setSizePolicy(sizePolicy)
                font = QtGui.QFont()
                font.setFamily("Futura")
                font.setPointSize(25)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.labelArborescence.setFont(font)
                self.labelArborescence.setStyleSheet("font: 25pt \"Futura\";\n" "color: rgb(0,0,0);")
                self.labelArborescence.setAlignment(QtCore.Qt.AlignCenter)
                self.labelArborescence.setObjectName("labelArborescence")
                self.left_container.addWidget(self.labelArborescence)
                
                # container légende ( code couleurs arborescence )
                self.legende_container = QtWidgets.QHBoxLayout()
                self.legende_container.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.legende_container.setContentsMargins(10, 10, 10, 10)
                self.legende_container.setSpacing(8)
                self.legende_container.setObjectName("legende_container")
                self.graphicViewActualise = QtWidgets.QGraphicsView(self.horizontalLayoutWidget_2)
                self.graphicViewActualise.setStyleSheet("background-color: rgb(255, 200, 0);")
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(10)
                sizePolicy.setVerticalStretch(10)
                sizePolicy.setHeightForWidth(self.graphicViewActualise.sizePolicy().hasHeightForWidth())

                # code couleur fichier actualisé
                self.graphicViewActualise.setSizePolicy(sizePolicy)
                self.graphicViewActualise.setMaximumSize(QtCore.QSize(30, 30))
                self.graphicViewActualise.setObjectName("graphicViewActualise")
                self.legende_container.addWidget(self.graphicViewActualise)
                self.labelActualise = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.labelActualise.sizePolicy().hasHeightForWidth())
                self.labelActualise.setSizePolicy(sizePolicy)
                self.labelActualise.setStyleSheet("color: rgb(255, 200, 0);")
                self.labelActualise.setAlignment(QtCore.Qt.AlignCenter)
                self.labelActualise.setObjectName("labelActualise")
                self.legende_container.addWidget(self.labelActualise)

                #code couleur fichier créé
                self.graphicViewCree = QtWidgets.QGraphicsView(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(10)
                sizePolicy.setVerticalStretch(10)
                sizePolicy.setHeightForWidth(self.graphicViewCree.sizePolicy().hasHeightForWidth())
                self.graphicViewCree.setSizePolicy(sizePolicy)
                self.graphicViewCree.setMaximumSize(QtCore.QSize(30, 30))
                self.graphicViewCree.setObjectName("graphicViewCree")
                self.graphicViewCree.setStyleSheet("background-color: rgb(0, 255, 40);")
                self.legende_container.addWidget(self.graphicViewCree)
                self.labelCree = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.labelCree.sizePolicy().hasHeightForWidth())
                self.labelCree.setSizePolicy(sizePolicy)
                self.labelCree.setStyleSheet("")
                self.labelCree.setAlignment(QtCore.Qt.AlignCenter)
                self.labelCree.setObjectName("labelCree")
                self.labelCree.setStyleSheet("color: rgb(0, 255, 40);")
                self.legende_container.addWidget(self.labelCree)

                #code couleur fichier supprimé
                self.graphicViewSupprime = QtWidgets.QGraphicsView(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(10)
                sizePolicy.setVerticalStretch(10)
                sizePolicy.setHeightForWidth(self.graphicViewSupprime.sizePolicy().hasHeightForWidth())
                self.graphicViewSupprime.setSizePolicy(sizePolicy)
                self.graphicViewSupprime.setMaximumSize(QtCore.QSize(30, 30))
                self.graphicViewSupprime.setObjectName("graphicViewSupprime")
                self.graphicViewSupprime.setStyleSheet("background-color: rgb(255, 0, 0);")
                self.legende_container.addWidget(self.graphicViewSupprime)
                self.labelSupprime = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.labelSupprime.sizePolicy().hasHeightForWidth())
                self.labelSupprime.setSizePolicy(sizePolicy)
                self.labelSupprime.setStyleSheet("")
                self.labelSupprime.setAlignment(QtCore.Qt.AlignCenter)
                self.labelSupprime.setObjectName("labelSupprime")
                self.labelSupprime.setStyleSheet("color: rgb(255, 0, 0);")
                self.legende_container.addWidget(self.labelSupprime)
                self.left_container.addLayout(self.legende_container)

                # layout arborescence
                self.layout_for_tree = QtWidgets.QVBoxLayout()
                self.layout_for_tree.setObjectName("layout_for_tree")

                self.model = QFileSystemModel()
                if not os.path.exists('../Results'):
                        os.mkdir("../Results")
                self.model.setRootPath("")
                
                # tree View
                self.treeView = QtWidgets.QTreeView(self.horizontalLayoutWidget_2)
                
                self.treeView.setModel(self.model)
                self.treeView.setRootIndex(self.model.index("../Results"))
                self.treeView.setObjectName("treeView")
                self.treeView.setAnimated(False)
                self.treeView.setSortingEnabled(True)
                self.treeView.sortByColumn(0, QtCore.Qt.AscendingOrder)
                self.treeView.hideColumn(1)
                self.treeView.hideColumn(2)
                self.treeView.hideColumn(3)
                self.treeView.setHeaderHidden(True)
                self.treeView.setColumnWidth(0, 200)
                self.treeView.setWindowTitle("Results")
                #self.treeView.setStyleSheet("color: rgb(255,255,255);\n" "background-color: rgb(0, 4, 28);")
                self.layout_for_tree.addWidget(self.treeView)
                self.left_container.addLayout(self.layout_for_tree)

                # bar de progression
                self.progressBar = QtWidgets.QProgressBar(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
                self.progressBar.setSizePolicy(sizePolicy)
                self.progressBar.setStyleSheet("background-color: rgb(0, 4, 8);\n" "color:rgb(0, 250, 125);")
                self.progressBar.setProperty("value", 0)
                self.progressBar.setObjectName("progressBar")
                self.left_container.addWidget(self.progressBar)

                # container boutons de contrôle
                self.buttons_container = QtWidgets.QHBoxLayout()
                self.buttons_container.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.buttons_container.setContentsMargins(100, 10, 100, 10)
                self.buttons_container.setObjectName("buttons_container")

                # bouton start
                self.buttonStart = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.buttonStart.sizePolicy().hasHeightForWidth())
                self.buttonStart.setSizePolicy(sizePolicy)
                self.buttonStart.setStyleSheet("background-color: rgb(0, 250, 125);\n" "color:rgb(0, 4, 38);")
                self.buttonStart.setObjectName("buttonStart")
                self.buttons_container.addWidget(self.buttonStart)

                # container de gauche (menu et log)
                self.left_container.addLayout(self.buttons_container)
                self.left_container.setStretch(0, 2)
                self.left_container.setStretch(2, 18)
                self.left_container.setStretch(3, 1)
                self.left_container.setStretch(4, 1)
                self.container.addLayout(self.left_container)
                
                self.right_container = QtWidgets.QVBoxLayout()
                # self.right_container.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.right_container.setContentsMargins(-1, -1, -1, 0)
                self.right_container.setObjectName("right_container")
                
                
                self.labelPreferences = QtWidgets.QLabel()
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.labelPreferences.sizePolicy().hasHeightForWidth())
                self.labelPreferences.setSizePolicy(sizePolicy)
                self.labelPreferences.setStyleSheet("font: 75 25pt \"Futura\";\n")
                self.labelPreferences.setAlignment(QtCore.Qt.AlignCenter)
                self.labelPreferences.setObjectName("labelPreferences")
                self.right_container.addWidget(self.labelPreferences)

                # menu container
                self.menu_container = QtWidgets.QHBoxLayout()
                self.menu_container.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.menu_container.setContentsMargins(0, 0, -1, 0)
                self.menu_container.setObjectName("menu_container")
                spacerItem = QtWidgets.QSpacerItem(50, 5, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                self.menu_container.addItem(spacerItem)
                self.inner_menu_container = QtWidgets.QVBoxLayout()
                self.inner_menu_container.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.inner_menu_container.setContentsMargins(-1, 0, -1, 10)
                self.inner_menu_container.setSpacing(15)
                self.inner_menu_container.setObjectName("inner_menu_container")

                # kingdoms
                self.labelKingdoms = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.labelKingdoms.sizePolicy().hasHeightForWidth())
                self.labelKingdoms.setSizePolicy(sizePolicy)
                self.labelKingdoms.setStyleSheet("\n" "font: 75 18pt \"Futura\";\n" "color:rgb(0, 250, 125);")
                self.labelKingdoms.setObjectName("labelKingdoms")
                self.inner_menu_container.addWidget(self.labelKingdoms)
                self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_2.setSpacing(0)
                self.horizontalLayout_2.setObjectName("horizontalLayout_2")

                self.checkBox_eukaryota = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_eukaryota.setStyleSheet("color: rgb(0, 4, 38);\n" "background-color:white;")
                
                self.checkBox_eukaryota.setChecked(True)
                self.checkBox_eukaryota.setObjectName("checkBox_eukaryota")
                self.horizontalLayout_2.addWidget(self.checkBox_eukaryota)

                self.checkBox_bacteria = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_bacteria.setStyleSheet("color: rgb(0, 4, 38);\n" "background-color:white;")
                self.checkBox_bacteria.setChecked(True)
                self.checkBox_bacteria.setObjectName("checkBox_bacteria")
                self.horizontalLayout_2.addWidget(self.checkBox_bacteria)


                self.checkBox_viruses = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_viruses.setStyleSheet("color: rgb(0, 4, 38);\n" "background-color:white;")
                self.checkBox_viruses.setChecked(True)
                self.checkBox_viruses.setObjectName("checkBox_viruses")
                self.horizontalLayout_2.addWidget(self.checkBox_viruses)


                self.checkBox_archaea = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_archaea.setStyleSheet("color: rgb(0, 4, 38);\n" "background-color:white;")
                self.checkBox_archaea.setChecked(True)
                self.checkBox_archaea.setObjectName("checkBox_archaea")
                self.horizontalLayout_2.addWidget(self.checkBox_archaea)


                self.inner_menu_container.addLayout(self.horizontalLayout_2)

                self.container_input_kingdom = QtWidgets.QHBoxLayout()
                self.container_input_kingdom.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.container_input_kingdom.setContentsMargins(10, -1, 40, -1)
                self.container_input_kingdom.setObjectName("container_input_kingdom")
                self.labelinputKingdom = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.labelinputKingdom.sizePolicy().hasHeightForWidth())
                self.labelinputKingdom.setSizePolicy(sizePolicy)
                self.labelinputKingdom.setStyleSheet("")
                self.labelinputKingdom.setObjectName("labelinputKingdom")
                self.labelinputKingdom.setStyleSheet("color: rgb(0, 0, 0);")
                self.container_input_kingdom.addWidget(self.labelinputKingdom)
                self.inputKingdom = QtWidgets.QTextEdit(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.inputKingdom.sizePolicy().hasHeightForWidth())
                self.inputKingdom.setSizePolicy(sizePolicy)
                self.inputKingdom.setMaximumSize(QtCore.QSize(150, 25))
                self.inputKingdom.setLayoutDirection(QtCore.Qt.LeftToRight)
                self.inputKingdom.setStyleSheet("")
                self.inputKingdom.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
                self.inputKingdom.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
                self.inputKingdom.setObjectName("inputKingdom")
                self.container_input_kingdom.addWidget(self.inputKingdom)
                self.container_input_kingdom.setStretch(0, 1)
                self.container_input_kingdom.setStretch(1, 2)
                self.inner_menu_container.addLayout(self.container_input_kingdom)
                self.labelRegions = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.labelRegions.sizePolicy().hasHeightForWidth())
                self.labelRegions.setSizePolicy(sizePolicy)
                self.labelRegions.setObjectName("labelRegions")
                self.labelRegions.setStyleSheet("\n" "font: 75 18pt \"Futura\";""color: rgb(0, 250, 125);")
                self.inner_menu_container.addWidget(self.labelRegions)
                self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_4.setSpacing(0)
                self.horizontalLayout_4.setObjectName("horizontalLayout_4")
                self.checkBox_rrna = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_rrna.setStyleSheet("color: rgb(0, 4, 38);\n" )
                self.checkBox_rrna.setChecked(True)
                self.checkBox_rrna.setObjectName("checkBox_rrna")
                self.horizontalLayout_4.addWidget(self.checkBox_rrna)
                self.checkBox_cds = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_cds.setStyleSheet("color: rgb(0, 4, 38);\n")
                self.checkBox_cds.setChecked(True)
                self.checkBox_cds.setObjectName("checkBox_cds")
                self.horizontalLayout_4.addWidget(self.checkBox_cds)
                self.checkBox_trna = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_trna.setStyleSheet("color: rgb(0, 4, 38);\n")
                self.checkBox_trna.setChecked(True)
                self.checkBox_trna.setObjectName("checkBox_trna")
                self.horizontalLayout_4.addWidget(self.checkBox_trna)
                self.checkBox_centromere = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_centromere.setStyleSheet("color: rgb(0, 4, 38);\n")
                self.checkBox_centromere.setChecked(True)
                self.checkBox_centromere.setObjectName("checkBox_centromere")
                self.horizontalLayout_4.addWidget(self.checkBox_centromere)
                self.checkBox_telomere = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_telomere.setStyleSheet("color: rgb(0, 4, 38);\n")
                self.checkBox_telomere.setChecked(True)
                self.checkBox_telomere.setObjectName("checkBox_telomere")
                self.horizontalLayout_4.addWidget(self.checkBox_telomere)
                self.inner_menu_container.addLayout(self.horizontalLayout_4)
                self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_5.setSpacing(0)
                self.horizontalLayout_5.setObjectName("horizontalLayout_5")
                self.checkBox_3utr = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_3utr.setStyleSheet("color: rgb(0, 4, 38);\n")
                self.checkBox_3utr.setChecked(True)
                self.checkBox_3utr.setObjectName("checkBox_3utr")
                self.horizontalLayout_5.addWidget(self.checkBox_3utr)
                self.checkBox_5utr = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_5utr.setStyleSheet("color: rgb(0, 4, 38);\n")
                self.checkBox_5utr.setChecked(True)
                self.checkBox_5utr.setObjectName("checkBox_5utr")
                self.horizontalLayout_5.addWidget(self.checkBox_5utr)
                self.checkBox_mobile_element = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_mobile_element.setStyleSheet("color: rgb(0, 4, 38);\n")
                self.checkBox_mobile_element.setChecked(True)
                self.checkBox_mobile_element.setObjectName("checkBox_mobile_element")
                self.horizontalLayout_5.addWidget(self.checkBox_mobile_element)
                self.checkBox_mobile_ncrna = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_mobile_ncrna.setStyleSheet("color: rgb(0, 4, 38);\n")
                self.checkBox_mobile_ncrna.setChecked(True)
                self.checkBox_mobile_ncrna.setObjectName("checkBox_mobile_ncrna")
                self.horizontalLayout_5.addWidget(self.checkBox_mobile_ncrna)
                self.checkBox_mobile_intron = QtWidgets.QCheckBox(self.horizontalLayoutWidget_2)
                self.checkBox_mobile_intron.setStyleSheet("color: rgb(0, 4, 38);\n")
                self.checkBox_mobile_intron.setChecked(True)
                self.checkBox_mobile_intron.setObjectName("checkBox_mobile_intron")
                self.horizontalLayout_5.addWidget(self.checkBox_mobile_intron)
                self.inner_menu_container.addLayout(self.horizontalLayout_5)
                self.container_input_region = QtWidgets.QHBoxLayout()
                self.container_input_region.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.container_input_region.setContentsMargins(10, -1, 40, -1)
                self.container_input_region.setObjectName("container_input_region")
                self.label_inputRegion = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.label_inputRegion.sizePolicy().hasHeightForWidth())
                self.label_inputRegion.setSizePolicy(sizePolicy)
                self.label_inputRegion.setStyleSheet("")
                self.label_inputRegion.setObjectName("label_inputRegion")
                self.label_inputRegion.setStyleSheet("color: rgb(0, 0, 0);")
                self.container_input_region.addWidget(self.label_inputRegion)
                self.inputRegion = QtWidgets.QTextEdit(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.inputRegion.sizePolicy().hasHeightForWidth())
                self.inputRegion.setSizePolicy(sizePolicy)
                self.inputRegion.setMaximumSize(QtCore.QSize(150, 25))
                self.inputRegion.setLayoutDirection(QtCore.Qt.LeftToRight)
                self.inputRegion.setStyleSheet("")
                self.inputRegion.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
                self.inputRegion.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
                self.inputRegion.setObjectName("inputRegion")
                self.container_input_region.addWidget(self.inputRegion)
                self.container_input_region.setStretch(0, 1)
                self.container_input_region.setStretch(1, 2)
                self.inner_menu_container.addLayout(self.container_input_region)
                self.menu_container.addLayout(self.inner_menu_container)
                spacerItem1 = QtWidgets.QSpacerItem(50, 5, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                self.menu_container.addItem(spacerItem1)
                self.menu_container.setStretch(0, 1)
                self.menu_container.setStretch(1, 3)
                self.menu_container.setStretch(2, 1)
                self.right_container.addLayout(self.menu_container)
                self.labelLog = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.labelLog.sizePolicy().hasHeightForWidth())
                self.labelLog.setSizePolicy(sizePolicy)
                self.labelLog.setMinimumSize(QtCore.QSize(0, 0))
                self.labelLog.setStyleSheet("\n" "font: 75 20pt \"Futura\";\n" " color: rgb(0, 0, 0);")
                self.labelLog.setContentsMargins(50, 0, 0, 0)
                self.labelLog.setObjectName("labelLog")
                self.right_container.addWidget(self.labelLog)
                self.container_log = QtWidgets.QHBoxLayout()
                self.container_log.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.container_log.setObjectName("container_log")
                self.container_log.setContentsMargins(50, 0, 0, 0)

                self.labelLog.setSizePolicy(sizePolicy)
                self.labelLog.setStyleSheet("font: 75 25pt \"Futura\";\n")
                self.labelLog.setAlignment(QtCore.Qt.AlignCenter)
                self.labelLog.setObjectName("container_log")

                self.logOutput = QtWidgets.QTextEdit()
                self.logOutput.setReadOnly(True)
                self.logOutput.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
                
                font = self.logOutput.font()
                font.setFamily("Courier")
                font.setPointSize(11)
                self.logOutput.moveCursor(QtGui.QTextCursor.End)
                self.logOutput.setCurrentFont(font)
                sb = self.logOutput.verticalScrollBar()
                sb.setValue(sb.maximum())
                #self.logOutput.setStyleSheet("background-color: rgb(0, 4, 38);\n" "color: rgb(0, 250, 125);")
                self.container_log.addWidget(self.logOutput)
                

                self.right_container.addLayout(self.container_log)
                self.right_container.setStretch(0, 2)
                self.right_container.setStretch(1, 4)
                self.right_container.setStretch(2, 2)
                self.right_container.setStretch(3, 90)
                self.container.addLayout(self.right_container)
                self.container.setStretch(0, 2)
                self.container.setStretch(1, 3)
               
                self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
                self.horizontalLayoutWidget.setGeometry(QtCore.QRect(550, 0, 561, 100))
                self.horizontalLayoutWidget.setSizePolicy(QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding))
                self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
                self.title_container = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
                self.title_container.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
                self.title_container.setContentsMargins(0, 10, -100, 0)
                self.title_container.setSpacing(0)
                self.title_container.setObjectName("title_container")
                pixmap = QPixmap('../images/genome.png')
 

                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)


                self.horizontalLayoutWidget_2.raise_()
                self.horizontalLayoutWidget.raise_()
                MainWindow.setCentralWidget(self.centralwidget)
                self.Menu = QtWidgets.QMenuBar(MainWindow)
                self.Menu.setGeometry(QtCore.QRect(0, 0, 1171, 22))
                self.Menu.setStyleSheet("")
                self.Menu.setObjectName("Menu")
                self.menuParametres = QtWidgets.QMenu(self.Menu)
                self.menuParametres.setObjectName("menuParametres")
                self.menuChoixKingdoms = QtWidgets.QMenu(self.menuParametres)
                self.menuChoixKingdoms.setObjectName("menuChoixKingdoms")
                self.menuChoixRegions = QtWidgets.QMenu(self.menuParametres)
                self.menuChoixRegions.setObjectName("menuChoixRegions")
                self.menuControles = QtWidgets.QMenu(self.Menu)
                self.menuControles.setObjectName("menuControles")
                MainWindow.setMenuBar(self.Menu)
                self.statusbar = QtWidgets.QStatusBar(MainWindow)
                self.statusbar.setObjectName("statusbar")
                MainWindow.setStatusBar(self.statusbar)
              
                self.actionEucaryota = QtWidgets.QAction(MainWindow)
                self.actionEucaryota.setCheckable(True)
                self.actionEucaryota.setChecked(True)
                self.actionEucaryota.setObjectName("actionEucaryota")
              
                self.actionBacteria = QtWidgets.QAction(MainWindow)
                self.actionBacteria.setCheckable(True)
                self.actionBacteria.setChecked(True)
                self.actionBacteria.setObjectName("actionBacteria")
              
                self.actionArchaea = QtWidgets.QAction(MainWindow)
                self.actionArchaea.setCheckable(True)
                self.actionArchaea.setChecked(True)
                self.actionArchaea.setObjectName("actionArchaea")
             
                self.actionrNA = QtWidgets.QAction(MainWindow)
                self.actionrNA.setCheckable(True)
                self.actionrNA.setChecked(True)
                self.actionrNA.setObjectName("actionrNA")
             
                self.actionCDS = QtWidgets.QAction(MainWindow)
                self.actionCDS.setCheckable(True)
                self.actionCDS.setChecked(True)
                self.actionCDS.setObjectName("actionCDS")
              
                self.actionIntron = QtWidgets.QAction(MainWindow)
                self.actionIntron.setCheckable(True)
                self.actionIntron.setChecked(True)
                self.actionIntron.setObjectName("actionIntron")
               
                self.actionncRNA = QtWidgets.QAction(MainWindow)
                self.actionncRNA.setCheckable(True)
                self.actionncRNA.setChecked(True)
                self.actionncRNA.setObjectName("actionncRNA")
              
                self.actionCentromere = QtWidgets.QAction(MainWindow)
                self.actionCentromere.setCheckable(True)
                self.actionCentromere.setChecked(True)
                self.actionCentromere.setObjectName("actionCentromere")
              
                self.actionTelomere = QtWidgets.QAction(MainWindow)
                self.actionTelomere.setCheckable(True)
                self.actionTelomere.setChecked(True)
                self.actionTelomere.setObjectName("actionTelomere")
              
                self.action3_UTR = QtWidgets.QAction(MainWindow)
                self.action3_UTR.setCheckable(True)
                self.action3_UTR.setChecked(True)
                self.action3_UTR.setObjectName("action3_UTR")
              
                self.action5_UTR = QtWidgets.QAction(MainWindow)
                self.action5_UTR.setCheckable(True)
                self.action5_UTR.setChecked(True)
                self.action5_UTR.setObjectName("action5_UTR")
              
                self.actiontRNA = QtWidgets.QAction(MainWindow)
                self.actiontRNA.setCheckable(True)
                self.actiontRNA.setChecked(True)
                self.actiontRNA.setObjectName("actiontRNA")
              
                self.actionmobile_element = QtWidgets.QAction(MainWindow)
                self.actionmobile_element.setCheckable(True)
                self.actionmobile_element.setChecked(True)
                self.actionmobile_element.setObjectName("actionmobile_element")
              
                self.actionViruses = QtWidgets.QAction(MainWindow)
                self.actionViruses.setCheckable(True)
                self.actionViruses.setChecked(True)
                self.actionViruses.setObjectName("actionViruses")

                self.actionStart = QtWidgets.QAction(MainWindow)
                self.actionStart.setObjectName("actionStart")
             
                self.actionStop = QtWidgets.QAction(MainWindow)
                self.actionStop.setObjectName("actionStop")
             
                self.actionReprendre = QtWidgets.QAction(MainWindow)
                self.actionReprendre.setObjectName("actionReprendre")
             
                self.actionRedemarrer = QtWidgets.QAction(MainWindow)
                self.actionRedemarrer.setObjectName("actionRedemarrer")
               
                self.menuChoixKingdoms.addAction(self.actionEucaryota)
                self.menuChoixKingdoms.addAction(self.actionBacteria)
                self.menuChoixKingdoms.addAction(self.actionArchaea)
                self.menuChoixKingdoms.addAction(self.actionViruses)
               
                self.menuChoixRegions.addAction(self.actionrNA)
                self.menuChoixRegions.addAction(self.actionCDS)
                self.menuChoixRegions.addAction(self.actionIntron)
                self.menuChoixRegions.addAction(self.actionncRNA)
                self.menuChoixRegions.addAction(self.actionCentromere)
                self.menuChoixRegions.addAction(self.actionTelomere)
                self.menuChoixRegions.addAction(self.action3_UTR)
                self.menuChoixRegions.addAction(self.action5_UTR)
                self.menuChoixRegions.addAction(self.actiontRNA)
                self.menuChoixRegions.addAction(self.actionmobile_element)
               
                self.menuParametres.addAction(self.menuChoixKingdoms.menuAction())
                self.menuParametres.addAction(self.menuChoixRegions.menuAction())
               
                self.menuControles.addAction(self.actionStart)
                self.menuControles.addAction(self.actionStop)
                self.menuControles.addAction(self.actionReprendre)
                self.menuControles.addAction(self.actionRedemarrer)
               
                self.Menu.addAction(self.menuControles.menuAction())
                self.Menu.addAction(self.menuParametres.menuAction())

                self.retranslateUi(MainWindow)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)
                                

        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
                self.labelArborescence.setText(_translate("MainWindow", "Arborescence"))
                self.labelActualise.setText(_translate("MainWindow", "Actualisé"))
                self.labelCree.setText(_translate("MainWindow", "Créé"))
                self.labelSupprime.setText(_translate("MainWindow", "Supprimé"))
                self.buttonStart.setText(_translate("MainWindow", "Start"))
                # self.buttonStop.setText(_translate("MainWindow", "Stop"))
                #self.buttonReset.setText(_translate("MainWindow", "Reset"))
                self.labelPreferences.setText(_translate("MainWindow", "Préférences"))
                self.labelKingdoms.setText(_translate("MainWindow", "Choix des Kingdoms:"))
                self.checkBox_eukaryota.setText(_translate("MainWindow", "Eukaryota"))
                self.checkBox_bacteria.setText(_translate("MainWindow", "Bacteria"))
                self.checkBox_viruses.setText(_translate("MainWindow", "Viruses"))
                self.checkBox_archaea.setText(_translate("MainWindow", "Archaea"))
                self.labelinputKingdom.setText(_translate("MainWindow", "Personnalisé:"))
                self.labelRegions.setText(_translate("MainWindow", "Choix des régions fonctionnelles:"))
                self.checkBox_rrna.setText(_translate("MainWindow", "rRna"))
                self.checkBox_cds.setText(_translate("MainWindow", "CDS"))
                self.checkBox_trna.setText(_translate("MainWindow", "tRNA"))
                self.checkBox_centromere.setText(_translate("MainWindow", "Centromère"))
                self.checkBox_telomere.setText(_translate("MainWindow", "Télomère"))
                self.checkBox_3utr.setText(_translate("MainWindow", "3\'UTR"))
                self.checkBox_5utr.setText(_translate("MainWindow", "5\'UTR"))
                self.checkBox_mobile_element.setText(_translate("MainWindow", "Mobile Element"))
                self.checkBox_mobile_ncrna.setText(_translate("MainWindow", "ncRna"))
                self.checkBox_mobile_intron.setText(_translate("MainWindow", "Intron"))
                self.label_inputRegion.setText(_translate("MainWindow", "Personnalisé:"))
                self.labelLog.setText(_translate("MainWindow", "Info"))
                self.menuParametres.setTitle(_translate("MainWindow", "Paramètres"))
                self.menuChoixKingdoms.setTitle(_translate("MainWindow", "Choix des Kingdoms"))
                self.menuChoixRegions.setTitle(_translate("MainWindow", "Choix des régions fonctionnelles"))
                self.menuControles.setTitle(_translate("MainWindow", "Contrôles"))
                self.actionEucaryota.setText(_translate("MainWindow", "Eucaryota"))
                self.actionBacteria.setText(_translate("MainWindow", "Bacteria"))
                self.actionArchaea.setText(_translate("MainWindow", "Archaea"))
                self.actionrNA.setText(_translate("MainWindow", "rRNA"))
                self.actionCDS.setText(_translate("MainWindow", "CDS"))
                self.actionIntron.setText(_translate("MainWindow", "Intron"))
                self.actionncRNA.setText(_translate("MainWindow", "ncRNA"))
                self.actionCentromere.setText(_translate("MainWindow", "Centromère"))
                self.actionTelomere.setText(_translate("MainWindow", "Telomère"))
                self.action3_UTR.setText(_translate("MainWindow", "3\'UTR"))
                self.action5_UTR.setText(_translate("MainWindow", "5\'UTR"))
                self.actiontRNA.setText(_translate("MainWindow", "tRNA"))
                self.actionmobile_element.setText(_translate("MainWindow", "mobile element"))
                self.actionViruses.setText(_translate("MainWindow", "Viruses"))
                self.actionStart.setText(_translate("MainWindow", "Démarrer"))
                self.actionStop.setText(_translate("MainWindow", "Stop"))
                self.actionReprendre.setText(_translate("MainWindow", "Reprendre"))
                self.actionRedemarrer.setText(_translate("MainWindow", "Redémarrer"))

        def connect_ui(self, genbank):
                self.buttonStart.clicked.connect(genbank.worker)

